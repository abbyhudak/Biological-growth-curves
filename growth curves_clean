growth.all <-read.csv("growth asymp size.csv", header=T)

names_list<-read.csv("maximum lengths_all.csv", header=T)
names_list<-names_list[,c(1:2)]
grow_new<-merge(growth.all, names_list, by = "ID")
grow_new<-grow_new[,c(1,5, 9, 14)]
colnames(grow_new)<-c("ID","x","y","Kmax")

splitted.data <- split(grow_new, f=grow_new$ID)

    y0_start<-0.05
	mumax_start<-0.2
	K_start<-1

df<-data.frame(matrix(ncol=7, nrow = 0))
names<-c("ID","y0","mumax","K","TTM", "turnpoint","max")
colnames(df)<-names

for(i in names(splitted.data)) {
	tmp<-splitted.data[[i]]
	x = tmp$x 
	y = tmp$y 
	Kmax = tmp[[4]][1] 

    m<-nls(y~K*y0*exp(mumax*x)/(K+y0*(exp(mumax*x)-1)),
        start=list(y0=y0_start, mumax=mumax_start, K=K_start), 
        algorithm="port", lower=list(y0=0, mumax=0, K=0), 
        upper=list(y0=1, mumax=0.7, K=Kmax))

#extract parameters from model (m)
p<-coef(m)
y0<-p["y0"]
mumax<-p["mumax"]
K<-p["K"]

deriv1 <- function(x, y0, mumax, K) {
    (K*mumax*y0*(K - y0)*exp(mumax * x))/((K + y0 * (exp(mumax * x) - 1))^2)
    }

turnpoint <- optimize(deriv1, range(x), y0=y0, mumax=mumax, K=K, maximum=TRUE)$maximum
TTM <- (log((0.95 * (y0 - K))/((0.95 - 1) * y0)))/mumax

#fit spline to get maximum growth rate
fit<-fit_spline(x, y)
p2<-coef(fit)
max<-p2["mumax"]

#add y0, mumax, K, TTM, turnpoint to df
df[i, ] = c(i,y0,mumax,K,TTM,turnpoint,max)

#print(c(y0,mumax,K,TTM,turnpoint))

}